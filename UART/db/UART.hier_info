|UART
i_clk_50mhz => uart_tx:uart_tx_inst.clk
i_clk_50mhz => s_data_to_send[0].CLK
i_clk_50mhz => s_data_to_send[1].CLK
i_clk_50mhz => s_data_to_send[2].CLK
i_clk_50mhz => s_data_to_send[3].CLK
i_clk_50mhz => s_data_to_send[4].CLK
i_clk_50mhz => s_data_to_send[5].CLK
i_clk_50mhz => s_data_to_send[6].CLK
i_clk_50mhz => s_data_to_send[7].CLK
i_clk_50mhz => r_buttons_prev[0].CLK
i_clk_50mhz => r_buttons_prev[1].CLK
i_clk_50mhz => r_buttons_prev[2].CLK
i_clk_50mhz => r_buttons_prev[3].CLK
i_clk_50mhz => s_tx_start.CLK
i_reset_n => uart_tx:uart_tx_inst.rst
i_reset_n => s_data_to_send[0].ACLR
i_reset_n => s_data_to_send[1].ACLR
i_reset_n => s_data_to_send[2].ACLR
i_reset_n => s_data_to_send[3].ACLR
i_reset_n => s_data_to_send[4].ACLR
i_reset_n => s_data_to_send[5].ACLR
i_reset_n => s_data_to_send[6].ACLR
i_reset_n => s_data_to_send[7].ACLR
i_reset_n => r_buttons_prev[0].ACLR
i_reset_n => r_buttons_prev[1].ACLR
i_reset_n => r_buttons_prev[2].ACLR
i_reset_n => r_buttons_prev[3].ACLR
i_reset_n => s_tx_start.ACLR
i_buttons[0] => Equal0.IN3
i_buttons[0] => s_data_to_send[0].DATAIN
i_buttons[0] => r_buttons_prev[0].DATAIN
i_buttons[1] => Equal0.IN2
i_buttons[1] => r_buttons_prev[1].DATAIN
i_buttons[1] => s_data_to_send[1].DATAIN
i_buttons[2] => Equal0.IN1
i_buttons[2] => r_buttons_prev[2].DATAIN
i_buttons[2] => s_data_to_send[2].DATAIN
i_buttons[3] => Equal0.IN0
i_buttons[3] => r_buttons_prev[3].DATAIN
i_buttons[3] => s_data_to_send[3].DATAIN
o_uart_tx <= uart_tx:uart_tx_inst.tx


|UART|uart_tx:uart_tx_inst
clk => done_reg.CLK
clk => busy_reg.CLK
clk => tx_reg.CLK
clk => tx_shift_reg[0].CLK
clk => tx_shift_reg[1].CLK
clk => tx_shift_reg[2].CLK
clk => tx_shift_reg[3].CLK
clk => tx_shift_reg[4].CLK
clk => tx_shift_reg[5].CLK
clk => tx_shift_reg[6].CLK
clk => tx_shift_reg[7].CLK
clk => bit_idx[0].CLK
clk => bit_idx[1].CLK
clk => bit_idx[2].CLK
clk => clk_cnt[0].CLK
clk => clk_cnt[1].CLK
clk => clk_cnt[2].CLK
clk => clk_cnt[3].CLK
clk => clk_cnt[4].CLK
clk => clk_cnt[5].CLK
clk => clk_cnt[6].CLK
clk => clk_cnt[7].CLK
clk => clk_cnt[8].CLK
clk => state~5.DATAIN
rst => done_reg.ACLR
rst => busy_reg.ACLR
rst => tx_reg.PRESET
rst => tx_shift_reg[0].ACLR
rst => tx_shift_reg[1].ACLR
rst => tx_shift_reg[2].ACLR
rst => tx_shift_reg[3].ACLR
rst => tx_shift_reg[4].ACLR
rst => tx_shift_reg[5].ACLR
rst => tx_shift_reg[6].ACLR
rst => tx_shift_reg[7].ACLR
rst => bit_idx[0].ACLR
rst => bit_idx[1].ACLR
rst => bit_idx[2].ACLR
rst => clk_cnt[0].ACLR
rst => clk_cnt[1].ACLR
rst => clk_cnt[2].ACLR
rst => clk_cnt[3].ACLR
rst => clk_cnt[4].ACLR
rst => clk_cnt[5].ACLR
rst => clk_cnt[6].ACLR
rst => clk_cnt[7].ACLR
rst => clk_cnt[8].ACLR
rst => state~7.DATAIN
tx_start => tx_shift_reg.OUTPUTSELECT
tx_start => tx_shift_reg.OUTPUTSELECT
tx_start => tx_shift_reg.OUTPUTSELECT
tx_start => tx_shift_reg.OUTPUTSELECT
tx_start => tx_shift_reg.OUTPUTSELECT
tx_start => tx_shift_reg.OUTPUTSELECT
tx_start => tx_shift_reg.OUTPUTSELECT
tx_start => tx_shift_reg.OUTPUTSELECT
tx_start => state.OUTPUTSELECT
tx_start => state.OUTPUTSELECT
tx_start => state.OUTPUTSELECT
tx_start => state.OUTPUTSELECT
tx_start => clk_cnt.OUTPUTSELECT
tx_start => clk_cnt.OUTPUTSELECT
tx_start => clk_cnt.OUTPUTSELECT
tx_start => clk_cnt.OUTPUTSELECT
tx_start => clk_cnt.OUTPUTSELECT
tx_start => clk_cnt.OUTPUTSELECT
tx_start => clk_cnt.OUTPUTSELECT
tx_start => clk_cnt.OUTPUTSELECT
tx_start => clk_cnt.OUTPUTSELECT
tx_start => Selector1.IN2
data_in[0] => tx_shift_reg.DATAB
data_in[1] => tx_shift_reg.DATAB
data_in[2] => tx_shift_reg.DATAB
data_in[3] => tx_shift_reg.DATAB
data_in[4] => tx_shift_reg.DATAB
data_in[5] => tx_shift_reg.DATAB
data_in[6] => tx_shift_reg.DATAB
data_in[7] => tx_shift_reg.DATAB
tx <= tx_reg.DB_MAX_OUTPUT_PORT_TYPE
busy <= busy_reg.DB_MAX_OUTPUT_PORT_TYPE
done <= done_reg.DB_MAX_OUTPUT_PORT_TYPE


